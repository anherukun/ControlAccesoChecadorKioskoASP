@{
    ViewBag.Title = "Panel";
}

@{
    int cookieDepartment = ControlAccesoChecadorKioskoASP.Application.ClientSideManager.RetriveCookieFromCollection(Request.Cookies, "client-department-selected") != null ?
        int.Parse(ControlAccesoChecadorKioskoASP.Application.ClientSideManager.RetriveCookieFromCollection(Request.Cookies, "client-department-selected")) : 0;
    int cookieRegistryCount = ControlAccesoChecadorKioskoASP.Application.ClientSideManager.RetriveCookieFromCollection(Request.Cookies, "client-registry-count") != null ?
        int.Parse(ControlAccesoChecadorKioskoASP.Application.ClientSideManager.RetriveCookieFromCollection(Request.Cookies, "client-registry-count")) : 0;
    int cookieMinutesRefresh = ControlAccesoChecadorKioskoASP.Application.ClientSideManager.RetriveCookieFromCollection(Request.Cookies, "client-minutes-refresh") != null ?
        int.Parse(ControlAccesoChecadorKioskoASP.Application.ClientSideManager.RetriveCookieFromCollection(Request.Cookies, "client-minutes-refresh")) : 0;

    List<ControlAccesoChecadorKioskoASP.Models.AccessRegistry> registries = Html.ViewData["AccessRegistries"] as List<ControlAccesoChecadorKioskoASP.Models.AccessRegistry>;
}

<script>
    var selectedEmploye = null;
    var employesList = @Html.Raw(Json.Encode(ViewData["Employes"]));
    var accessRegistries = @Html.Raw(Json.Encode(ViewData["AccessRegistries"]));
    var validEmploye = false;

    function clockStart() {
        var today = new Date();
        var d = checkTime(today.getDate()) + " " + checkMonth(today.getMonth());
        var h = today.getHours();
        var m = today.getMinutes();
        var s = today.getSeconds();
        m = checkTime(m);
        s = checkTime(s);
        document.getElementById('clock').innerHTML =
            d + " [" + h + ":" + m + ":" + s + "]";
        setTimeout(clockStart, 1000);
    }
    function checkTime(i) {
        if (i < 10) { i = "0" + i };  // add zero in front of numbers < 10
        return i;
    }
    function checkMonth(i) {
        switch (i) {
            case 0:
                return "ENE";
            case 1:
                return "FEB";
            case 2:
                return "MAR";
            case 3:
                return "ABR";
            case 4:
                return "MAY";
            case 5:
                return "JUN";
            case 6:
                return "JUL";
            case 7:
                return "AGO";
            case 8:
                return "SEP";
            case 9:
                return "OCT";
            case 10:
                return "NOV";
            case 11:
                return "DIC";
            default:
        }
    }
</script>

<div class="row" style="margin-top: 32px">
    <!--FORMULARIO DE REGISTRO ACCESO-->
    <div class="col-sm-4" style="padding: 32px 32px 32px 32px; background-color:#eeeeee; box-shadow: 4px 4px 15px rgba(0, 0, 0, 0.40);">
        <h2>Departamento</h2>

        <script type="text/javascript">
            function validateIDEmploye() {
                var input = document.forms["form"]["idEmploye"]

                if (Number(input.value) < 0) {
                    input.value = 0;
                }
                if (input.value.length == 6) {
                    selectedEmploye = employesList.find(x => x.EmployeId === Number(input.value));

                    if (selectedEmploye != null) {
                        document.getElementById("employeName").innerHTML = selectedEmploye.Name;
                        validEmploye = true;
                    }

                } else {
                    selectedEmploye = null;
                    validEmploye = false;
                    document.getElementById("employeName").innerHTML = "";
                }
            }

            function validateForm() {
                var input = document.forms["form"]["idEmploye"]
                if (input.value > 0 && validEmploye) {
                    alert("EmployeID= " + selectedEmploye.EmployeId + " Employe Name= " + selectedEmploye.Name);
                    return true;
                } else {
                    alert("Debes de ingresar una ficha de trabajador valido");
                    return false;
                }
            }

            function clearForm() {
                selectedEmploye = null;
                validEmploye = false;
                document.forms["form"]["idEmploye"].value = "";
                document.getElementById("employeName").innerHTML = "";
            }
        </script>

        @using (Html.BeginForm("Index", "Home", FormMethod.Post, new { onsubmit = "return validateForm()", id = "form" }))
        {
            <h4 style="margin-bottom:8px;"><b>Ficha:</b> </h4>
            @Html.TextBox("idEmploye", null, new
            {
                 @class = "form-control",
                 placeholder = "Ingresa tu ficha Ej. (582509)",
                 type = "number",
                 oninput = "validateIDEmploye()",
                 style = "font-size: 12pt;"
            })
            <h4 style="margin-bottom:8px; margin-top:16px;"><b>Trabajador:</b></h4>
            <h5 id="employeName" style="margin-bottom:8px;"></h5>

            <div class="row" style="margin-top: 32px; padding-left: 16px;">
                <a class="btn btn-danger" onclick="clearForm()">
                    <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>
                </a>
                <button type="submit" class="btn btn-primary">
                    <span class="glyphicon glyphicon-ok" aria-hidden="true"></span>  Registrar Entrada
                </button>
            </div>
        }


    </div>

    <!--BACKLOG REGISTRY-->
    <div class="row col-sm-7 col-sm-offset-1">
        <div style="background-color:#eeeeee; padding: 32px;">
            <h2 id="clock">23 Jun 12:59:00</h2>
            <script type="text/javascript">clockStart();</script>
        </div>

        <div style="background-color:#eeeeee; padding: 32px;">
            <div class="row">
                <div class="col-md-3">
                    <p><a class="btn btn-success"><span class="glyphicon glyphicon-share-alt" aria-hidden="true"></span>  Registrar salida</a></p>
                </div>

                <div class="col-md-9">
                    <h5>*Para anotar tu salida selecciona tu registro, y pulsa el boton</h5>
                </div>
            </div>
        </div>
        <br />

        <div style="background-color:#eeeeee; padding: 32px">
            <div class="row">
                <div class="col-md-6">
                    <h4><b>Trabajador: </b></h4>
                    <h5 id="selectedRegistryEmployName">...</h5>
                </div>
                <div class="col-md-6" style="display: none;">
                    <h4><b>Hora de entrada: </b></h4>
                    <h5 id="selectedRegistryIngress">--:--</h5>
                </div>
            </div>
        </div>

        <div>
            <script type="text/javascript">
                function convertInJs(ticks) {
                    var epochTicks = 621355968000000000,    // the number of .net ticks at the unix epoch
                        ticksPerMillisecond = 10000,        // there are 10000 .net ticks per millisecond
                        jsTicks = 0,                        // ticks in javascript environment
                        jsDate                              // Date in javascript environment

                    jsTicks = (ticks - epochTicks) / ticksPerMillisecond;

                    jsDate = new Date(jsTicks); // N.B. Js applies local timezone in automatic

                    var hh = jsDate.getHours();
                    var mm = jsDate.getMinutes();

                    var shh = "";
                    var smm = "";

                    if (hh - 12 > 9)
                        shh = (hh - 12);
                    else
                        shh = "0" + (hh - 12);

                    if (mm > 9)
                        smm = (mm);
                    else
                        smm = "0" + (mm);

                    if (hh > 12)
                        return shh + ":" + smm + " p.m.";
                    else
                        return shh + ":" + smm + " a.m.";
                }

                function selectRegistryElement(index) {
                    var selectedRegistryEmployeName = document.getElementById("selectedRegistryEmployName");
                    var selectedRegistryIngress = document.getElementById("selectedRegistryIngress")

                    selectedRegistryEmployeName.innerHTML = accessRegistries[index].Employe.Name;
                    selectedRegistryIngress.innerHTML = convertInJs(accessRegistries[index].IngressTicks);
                }
            </script>
            <table class="table table-striped table-hover">
                <thead>
                    <tr>
                        <th scope="col">Ficha</th>
                        <th scope="col">Trabajador</th>
                        <th scope="col">Fecha</th>
                        <th scope="col">Entrada</th>
                        <th scope="col">Salida</th>
                        <th scope="col">Horas</th>
                    </tr>
                </thead>
                <tbody style="cursor:pointer">
                    @{for (int i = 0; i < cookieRegistryCount; i++)
                        {
                            string ingressTimeString = new DateTime(registries[i].IngressTicks).ToShortTimeString();
                            string egressTimeString = "--:--";
                            string diferenceHours = "--";
                            string diferenceMinutes = "--";

                            if (registries[i].EgressTicks != 0)
                            {
                                egressTimeString = new DateTime(registries[i].EgressTicks).ToShortTimeString();
                                diferenceHours = new DateTime(registries[i].EgressTicks).Subtract(new DateTime(registries[i].IngressTicks)).Hours < 10 ?
                                    $"0{new DateTime(registries[i].EgressTicks).Subtract(new DateTime(registries[i].IngressTicks)).Hours}" :
                                    $"{new DateTime(registries[i].EgressTicks).Subtract(new DateTime(registries[i].IngressTicks)).Hours}";
                                diferenceMinutes = new DateTime(registries[i].EgressTicks).Subtract(new DateTime(registries[i].IngressTicks)).Minutes < 10 ?
                                    $"0{new DateTime(registries[i].EgressTicks).Subtract(new DateTime(registries[i].IngressTicks)).Minutes}" :
                                    $"{new DateTime(registries[i].EgressTicks).Subtract(new DateTime(registries[i].IngressTicks)).Minutes}";
                            }
                            <tr onclick="selectRegistryElement(@i)">
                                <th scope="row">@registries[i].Employe.EmployeId</th>
                                <td>@registries[i].Employe.Name</td>
                                <td>@registries[i].Date.ToShortDateString()</td>
                                <td>@ingressTimeString</td>
                                <td>@egressTimeString</td>
                                <td>@diferenceHours:@diferenceMinutes</td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>